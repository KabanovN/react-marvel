{"version":3,"sources":["components/appHeader/AppHeader.jsx","components/spinner/Spinner.jsx","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.jsx","hooks/http.hook.jsx","services/marvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.jsx","components/charList/CharList.jsx","components/skeleton/Skeleton.jsx","components/charInfo/CharInfo.jsx","components/errorBoundary/ErrorBoundary.jsx","resources/img/vision.png","pages/MainPage.jsx","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.jsx","components/comicsList/ComicsList.jsx","pages/ComicsPage.jsx","pages/SingleComicPage.jsx","pages/Page404.jsx","components/app/App.jsx","index.js"],"names":["AppHeader","className","to","end","style","color","isActive","Spinner","xmlns","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","alt","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","res","ok","Error","status","json","data","message","clearError","useMarvelService","_apiKey","_apiBase","_transformCharacter","char","id","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","comic","title","descr","price","prices","pageCount","language","textObjects","getAllCharacters","offset","results","map","getCharacter","getComicsList","getComic","View","classesNames","href","RandomChar","setChar","onCharLoaded","updateCharacter","Math","floor","random","then","useEffect","spinner","errorMessage","content","onClick","mjolnir","CharList","props","chars","setChars","newCharLoading","setNewCharLoading","setOffset","charEnded","setCharEnded","handleRequestChars","initial","handleCharsLoaded","newChars","length","charsList","list","itemClass","charId","tabIndex","onCharSelected","objectFit","includes","renderCharList","disabled","Skeleton","fitStyle","comicsList","item","i","CharInfo","updateChar","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","setSelectedChar","decoration","AppBanner","avengers","avengersLogo","ComicsList","setComicsList","newComicsLoading","setNewComicsLoading","comicsEnded","setComicsEnded","handleRequestComics","handleComicsLoaded","newComics","prevOffset","itemsList","renderComicsList","ComicsPage","SingleComicPage","setComic","comicId","useParams","Page404","fontSize","fontWeight","textAlign","marginTop","textDecoration","cursor","App","basename","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.9d59a8aa.chunk.js","sourcesContent":["import { Link, NavLink } from 'react-router-dom';\n\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className='app__header'>\n            <h1 className='app__title'>\n                <Link to='/'>\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className='app__menu'>\n                <ul>\n                    <li>\n                        <NavLink\n                            end\n                            to='/'\n                            style={({ isActive }) => ({\n                                color: isActive ? '#9f0013' : 'inherit',\n                            })}>\n                            Characters\n                        </NavLink>\n                    </li>\n                    /\n                    <li>\n                        <NavLink\n                            to='/comics'\n                            style={({ isActive }) => ({\n                                color: isActive ? '#9f0013' : 'inherit',\n                            })}>\n                            Comics\n                        </NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    );\n};\n\nexport default AppHeader;\n","const Spinner = () => {\r\n    return (\r\n        <svg\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            style={{ margin: '0 auto', background: 'none', display: 'block' }}\r\n            width='200px'\r\n            height='200px'\r\n            viewBox='0 0 100 100'\r\n            preserveAspectRatio='xMidYMid'>\r\n            <g transform='translate(80,50)'>\r\n                <g transform='rotate(0)'>\r\n                    <circle cx='0' cy='0' r='7' fill='#1c4595' fillOpacity='1'>\r\n                        <animateTransform\r\n                            attributeName='transform'\r\n                            type='scale'\r\n                            begin='-0.875s'\r\n                            values='1.5 1.5;1 1'\r\n                            keyTimes='0;1'\r\n                            dur='1s'\r\n                            repeatCount='indefinite'></animateTransform>\r\n                        <animate\r\n                            attributeName='fillOpacity'\r\n                            keyTimes='0;1'\r\n                            dur='1s'\r\n                            repeatCount='indefinite'\r\n                            values='1;0'\r\n                            begin='-0.875s'></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform='translate(71.21320343559643,71.21320343559643)'>\r\n                <g transform='rotate(45)'>\r\n                    <circle\r\n                        cx='0'\r\n                        cy='0'\r\n                        r='7'\r\n                        fill='#1c4595'\r\n                        fillOpacity='0.875'>\r\n                        <animateTransform\r\n                            attributeName='transform'\r\n                            type='scale'\r\n                            begin='-0.75s'\r\n                            values='1.5 1.5;1 1'\r\n                            keyTimes='0;1'\r\n                            dur='1s'\r\n                            repeatCount='indefinite'></animateTransform>\r\n                        <animate\r\n                            attributeName='fillOpacity'\r\n                            keyTimes='0;1'\r\n                            dur='1s'\r\n                            repeatCount='indefinite'\r\n                            values='1;0'\r\n                            begin='-0.75s'></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform='translate(50,80)'>\r\n                <g transform='rotate(90)'>\r\n                    <circle\r\n                        cx='0'\r\n                        cy='0'\r\n                        r='7'\r\n                        fill='#1c4595'\r\n                        fillOpacity='0.75'>\r\n                        <animateTransform\r\n                            attributeName='transform'\r\n                            type='scale'\r\n                            begin='-0.625s'\r\n                            values='1.5 1.5;1 1'\r\n                            keyTimes='0;1'\r\n                            dur='1s'\r\n                            repeatCount='indefinite'></animateTransform>\r\n                        <animate\r\n                            attributeName='fillOpacity'\r\n                            keyTimes='0;1'\r\n                            dur='1s'\r\n                            repeatCount='indefinite'\r\n                            values='1;0'\r\n                            begin='-0.625s'></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform='translate(28.786796564403577,71.21320343559643)'>\r\n                <g transform='rotate(135)'>\r\n                    <circle\r\n                        cx='0'\r\n                        cy='0'\r\n                        r='7'\r\n                        fill='#1c4595'\r\n                        fillOpacity='0.625'>\r\n                        <animateTransform\r\n                            attributeName='transform'\r\n                            type='scale'\r\n                            begin='-0.5s'\r\n                            values='1.5 1.5;1 1'\r\n                            keyTimes='0;1'\r\n                            dur='1s'\r\n                            repeatCount='indefinite'></animateTransform>\r\n                        <animate\r\n                            attributeName='fillOpacity'\r\n                            keyTimes='0;1'\r\n                            dur='1s'\r\n                            repeatCount='indefinite'\r\n                            values='1;0'\r\n                            begin='-0.5s'></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform='translate(20,50.00000000000001)'>\r\n                <g transform='rotate(180)'>\r\n                    <circle\r\n                        cx='0'\r\n                        cy='0'\r\n                        r='7'\r\n                        fill='#1c4595'\r\n                        fillOpacity='0.5'>\r\n                        <animateTransform\r\n                            attributeName='transform'\r\n                            type='scale'\r\n                            begin='-0.375s'\r\n                            values='1.5 1.5;1 1'\r\n                            keyTimes='0;1'\r\n                            dur='1s'\r\n                            repeatCount='indefinite'></animateTransform>\r\n                        <animate\r\n                            attributeName='fillOpacity'\r\n                            keyTimes='0;1'\r\n                            dur='1s'\r\n                            repeatCount='indefinite'\r\n                            values='1;0'\r\n                            begin='-0.375s'></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform='translate(28.78679656440357,28.786796564403577)'>\r\n                <g transform='rotate(225)'>\r\n                    <circle\r\n                        cx='0'\r\n                        cy='0'\r\n                        r='7'\r\n                        fill='#1c4595'\r\n                        fillOpacity='0.375'>\r\n                        <animateTransform\r\n                            attributeName='transform'\r\n                            type='scale'\r\n                            begin='-0.25s'\r\n                            values='1.5 1.5;1 1'\r\n                            keyTimes='0;1'\r\n                            dur='1s'\r\n                            repeatCount='indefinite'></animateTransform>\r\n                        <animate\r\n                            attributeName='fillOpacity'\r\n                            keyTimes='0;1'\r\n                            dur='1s'\r\n                            repeatCount='indefinite'\r\n                            values='1;0'\r\n                            begin='-0.25s'></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform='translate(49.99999999999999,20)'>\r\n                <g transform='rotate(270)'>\r\n                    <circle\r\n                        cx='0'\r\n                        cy='0'\r\n                        r='7'\r\n                        fill='#1c4595'\r\n                        fillOpacity='0.25'>\r\n                        <animateTransform\r\n                            attributeName='transform'\r\n                            type='scale'\r\n                            begin='-0.125s'\r\n                            values='1.5 1.5;1 1'\r\n                            keyTimes='0;1'\r\n                            dur='1s'\r\n                            repeatCount='indefinite'></animateTransform>\r\n                        <animate\r\n                            attributeName='fillOpacity'\r\n                            keyTimes='0;1'\r\n                            dur='1s'\r\n                            repeatCount='indefinite'\r\n                            values='1;0'\r\n                            begin='-0.125s'></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform='translate(71.21320343559643,28.78679656440357)'>\r\n                <g transform='rotate(315)'>\r\n                    <circle\r\n                        cx='0'\r\n                        cy='0'\r\n                        r='7'\r\n                        fill='#1c4595'\r\n                        fillOpacity='0.125'>\r\n                        <animateTransform\r\n                            attributeName='transform'\r\n                            type='scale'\r\n                            begin='0s'\r\n                            values='1.5 1.5;1 1'\r\n                            keyTimes='0;1'\r\n                            dur='1s'\r\n                            repeatCount='indefinite'></animateTransform>\r\n                        <animate\r\n                            attributeName='fillOpacity'\r\n                            keyTimes='0;1'\r\n                            dur='1s'\r\n                            repeatCount='indefinite'\r\n                            values='1;0'\r\n                            begin='0s'></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\nimport './error.scss';\r\n\r\nconst ErrorMessage = () => {\r\n    return <img src={img} alt='error' className='errorImg' />;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useState, useCallback } from 'react';\r\n\r\n//кастомный хук для запросов с логикой loading, error\r\nfunction useHttp() {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(\r\n        async (\r\n            url,\r\n            method = 'GET',\r\n            body = null,\r\n            headers = { 'Content-Type': 'Application/json' }\r\n        ) => {\r\n            setLoading(true);\r\n            try {\r\n                const res = await fetch(url, { method, body, headers });\r\n\r\n                if (!res.ok) {\r\n                    throw new Error(`status: ${res.status}`);\r\n                }\r\n\r\n                const data = await res.json();\r\n                setLoading(false);\r\n                return data;\r\n            } catch (error) {\r\n                setLoading(false);\r\n                setError(error.message);\r\n                throw error;\r\n            }\r\n        },\r\n        []\r\n    );\r\n\r\n    //очистка ошибок для возможности повторного запроса\r\n    const clearError = useCallback(() => {\r\n        setError(null);\r\n    }, []);\r\n\r\n    //возвращаем из хука сущности\r\n    return { loading, request, error, clearError };\r\n}\r\n\r\nexport default useHttp;\r\n","import useHttp from '../hooks/http.hook';\r\n\r\nfunction useMarvelService() {\r\n    const _apiKey = '43b852b655d1649e827e3c167cb36de9';\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _baseCharOffset = 210;\r\n    const _baseComicsOffset = 10;\r\n\r\n    const { request, error, loading, clearError } = useHttp();\r\n\r\n    //методы для трансформации данных из полученного объекта - вычленяем нужные данные в новый объект\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description\r\n                ? `${char.description.slice(0, 220)}...`\r\n                : 'You can learn more information on Homepage or Wiki',\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items,\r\n        };\r\n    };\r\n\r\n    const _transformComics = (comic) => {\r\n        return {\r\n            id: comic.id,\r\n            title: comic.title,\r\n            descr: comic.description || 'There is no description',\r\n            img: `${comic.thumbnail.path}.${comic.thumbnail.extension}`,\r\n            price: comic.prices.price\r\n                ? `${comic.prices.price}$`\r\n                : 'not available',\r\n            pageCount: comic.pageCount || 'no info about the number of pages',\r\n            language: comic.textObjects.language || 'en-us',\r\n        };\r\n    };\r\n\r\n    const getAllCharacters = async (offset = _baseCharOffset) => {\r\n        const res = await request(\r\n            `${_apiBase}characters?limit=9&offset=${offset}&apikey=${_apiKey}`\r\n        );\r\n        return res.data.results.map(_transformCharacter);\r\n    };\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(\r\n            `${_apiBase}characters/${id}?apikey=${_apiKey}`\r\n        );\r\n        return _transformCharacter(res.data.results[0]);\r\n    };\r\n\r\n    const getComicsList = async (offset = _baseComicsOffset) => {\r\n        const res = await request(\r\n            `${_apiBase}comics?limit=8&offset=${offset}&apikey=${_apiKey}`\r\n        );\r\n\r\n        return res.data.results.map(_transformComics);\r\n    };\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?apikey=${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    };\r\n\r\n    return {\r\n        getAllCharacters,\r\n        getCharacter,\r\n        getComicsList,\r\n        getComic,\r\n        loading,\r\n        error,\r\n        clearError,\r\n    };\r\n}\r\n\r\nexport default useMarvelService;\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/marvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nfunction RandomChar() {\n    const [char, setChar] = useState({});\n\n    const { getCharacter, loading, error, clearError } = useMarvelService();\n\n    //загрузка персонажа\n    const onCharLoaded = (char) => {\n        setChar(char);\n    };\n\n    //обновление рандомного персонажа\n    const updateCharacter = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id).then(onCharLoaded);\n        clearError(); //заранее очищаем от ошибок\n    };\n\n    useEffect(() => {\n        updateCharacter();\n        // eslint-disable-next-line\n    }, []);\n\n    const spinner = loading ? <Spinner /> : null;\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const content = !(loading || error) ? <View char={char} /> : null;\n\n    return (\n        <div className='randomchar'>\n            {spinner}\n            {errorMessage}\n            {content}\n            <div className='randomchar__static'>\n                <p className='randomchar__title'>\n                    Random character for today!\n                    <br />\n                    Do you want to get to know him better?\n                </p>\n                <p className='randomchar__title'>Or choose another one</p>\n                <button\n                    className='button button__main'\n                    onClick={updateCharacter}>\n                    <div className='inner'>try it</div>\n                </button>\n                <img\n                    src={mjolnir}\n                    alt='mjolnir'\n                    className='randomchar__decoration'\n                />\n            </div>\n        </div>\n    );\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki } = char;\n\n    let classesNames = 'randomchar__img';\n    if (\n        thumbnail ===\n        'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n    ) {\n        classesNames = 'randomchar__img contain';\n    }\n\n    return (\n        <div className='randomchar__block'>\n            <img\n                src={thumbnail}\n                alt='Random character'\n                className={classesNames}\n            />\n            <div className='randomchar__info'>\n                <p className='randomchar__name'>{name}</p>\n                <p className='randomchar__descr'>{description}</p>\n                <div className='randomchar__btns'>\n                    <a href={homepage} className='button button__main'>\n                        <div className='inner'>homepage</div>\n                    </a>\n                    <a href={wiki} className='button button__secondary'>\n                        <div className='inner'>Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RandomChar;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useMarvelService from '../../services/marvelService';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nfunction CharList(props) {\n    const [chars, setChars] = useState([]);\n    const [newCharLoading, setNewCharLoading] = useState(false); //признак дозагрузки новых персонажей\n    const [offset, setOffset] = useState(210); //заданный отступ на сервере для \"адекватных\" персонажей\n    const [charEnded, setCharEnded] = useState(false); //признак окончания перечня персонажей\n\n    const { loading, error, getAllCharacters } = useMarvelService();\n\n    const handleRequestChars = (offset, initial = false) => {\n        initial ? setNewCharLoading(false) : setNewCharLoading(true); //только при первичной загрузке, false = спиннер\n        getAllCharacters(offset).then(handleCharsLoaded);\n    };\n\n    //функция загрузки персонажей\n    const handleCharsLoaded = (newChars) => {\n        //определение конца списка персонажей\n        newChars.length < 9 ? setCharEnded(true) : setCharEnded(false);\n\n        setChars([...chars, ...newChars]); //загрузка текущих из state + новых персонажей\n        setOffset((offset) => offset + 9); //увеличение отступа для новых персонажей\n        setNewCharLoading(false); //отключаем disabled для кнопки дозагрузки\n    };\n\n    const renderCharList = (chars) => {\n        const list = chars.map((char) => {\n            //применение класса активности на выделенном элементе + возможность выбора через tab\n            let itemClass = 'char__item';\n            if (char.id === props.charId) {\n                itemClass += ' char__item_selected';\n            }\n\n            return (\n                <li\n                    className={itemClass}\n                    key={char.id}\n                    tabIndex={0}\n                    onClick={() => props.onCharSelected(char.id)}>\n                    <img\n                        src={char.thumbnail}\n                        alt='abyss'\n                        //применение стиля для not available thumbnails\n                        style={{\n                            objectFit: char.thumbnail.includes(\n                                'image_not_available'\n                            )\n                                ? 'contain'\n                                : 'cover',\n                        }}\n                    />\n                    <div className='char__name'>{char.name}</div>\n                </li>\n            );\n        });\n\n        return <ul className='char__grid'>{list}</ul>;\n    };\n    const charsList = renderCharList(chars);\n\n    useEffect(() => {\n        handleRequestChars(offset, true);\n        //eslint-disable-next-line\n    }, []);\n\n    const spinner = loading && !newCharLoading ? <Spinner /> : null;\n    const errorMessage = error ? <ErrorMessage /> : null;\n\n    return (\n        <div className='char__list'>\n            {spinner}\n            {errorMessage}\n            {charsList}\n            <button\n                className='button button__main button__long'\n                disabled={newCharLoading}\n                onClick={() => handleRequestChars(offset)}\n                style={{ display: charEnded ? 'none' : 'block' }}>\n                <div className='inner'>load more</div>\n            </button>\n        </div>\n    );\n}\n\n//проверка на функ-ю и обязательность\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className='char__select'>\n                Please select a character to see information\n            </p>\n            <div className='skeleton'>\n                <div className='pulse skeleton__header'>\n                    <div className='pulse skeleton__circle'></div>\n                    <div className='pulse skeleton__mini'></div>\n                </div>\n                <div className='pulse skeleton__block'></div>\n                <div className='pulse skeleton__block'></div>\n                <div className='pulse skeleton__block'></div>\n            </div>\n        </>\n    );\n};\n\nexport default Skeleton;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useMarvelService from '../../services/marvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nfunction CharInfo(props) {\n    const [char, setChar] = useState(null);\n\n    const { loading, error, getCharacter, clearError } = useMarvelService();\n\n    const updateChar = () => {\n        const { charId } = props;\n        if (!charId) {\n            return;\n        }\n        clearError(); //очистка от возможных ошибок для возможности повторного запроса\n        getCharacter(charId).then((char) => setChar(char));\n    };\n\n    useEffect(() => {\n        updateChar();\n        // eslint-disable-next-line\n    }, [props.charId]);\n\n    const skeleton = !loading && !error && !char ? <Skeleton /> : null;\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !loading && !error && char ? <View char={char} /> : null;\n\n    return (\n        <div className='char__info'>\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    );\n}\n\nconst View = ({ char }) => {\n    const { name, thumbnail, description, wiki, homepage, comics } = char;\n\n    //добавление стиля для 'image not available'\n    let fitStyle = null;\n    if (\n        thumbnail ===\n        'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n    ) {\n        fitStyle = { objectFit: 'contain' };\n    }\n\n    //рендеринг списка комиксов\n    const comicsList = comics\n        .map((item, i) => {\n            return (\n                <li className='char__comics-item' key={i}>\n                    {item.name}\n                </li>\n            );\n        })\n        .slice(0, 10);\n\n    return (\n        <>\n            <div className='char__basics'>\n                <img src={thumbnail} alt={name} style={fitStyle} />\n                <div>\n                    <div className='char__info-name'>{name}</div>\n                    <div className='char__btns'>\n                        <a href={homepage} className='button button__main'>\n                            <div className='inner'>homepage</div>\n                        </a>\n                        <a href={wiki} className='button button__secondary'>\n                            <div className='inner'>Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className='char__descr'>{description}</div>\n            <div className='char__comics'>Comics:</div>\n            <ul className='char__comics-list'>\n                {comics.length > 0 ? null : 'There is no info about comics'}\n                {comicsList}\n            </ul>\n        </>\n    );\n};\n\nCharInfo.propTypes = {\n    charId: PropTypes.number, //проверка на числовой тип пропса charId\n};\n\nexport default CharInfo;\n","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false,\r\n    };\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react';\r\nimport RandomChar from '../components/randomChar/RandomChar';\r\nimport CharList from '../components/charList/CharList';\r\nimport CharInfo from '../components/charInfo/CharInfo';\r\nimport ErrorBoundary from '../components/errorBoundary/ErrorBoundary';\r\n\r\nimport decoration from '../resources/img/vision.png';\r\n\r\nfunction MainPage() {\r\n    const [selectedChar, setSelectedChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setSelectedChar(id);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar />\r\n            </ErrorBoundary>\r\n            <div className='char__content'>\r\n                <ErrorBoundary>\r\n                    <CharList\r\n                        onCharSelected={onCharSelected}\r\n                        charId={selectedChar}\r\n                    />\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar} />\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className='bg-decoration' src={decoration} alt='vision' />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainPage;\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className='app__banner'>\n            <img src={avengers} alt='Avengers' />\n            <div className='app__banner-text'>\n                New comics every week!\n                <br />\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt='Avengers logo' />\n        </div>\n    );\n};\n\nexport default AppBanner;\n","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/marvelService';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './comicsList.scss';\r\n\r\nfunction ComicsList() {\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [offset, setOffset] = useState(10);\r\n    const [newComicsLoading, setNewComicsLoading] = useState(false);\r\n    const [comicsEnded, setComicsEnded] = useState(null);\r\n\r\n    const { getComicsList, loading, error } = useMarvelService();\r\n\r\n    const handleRequestComics = (offset, initial = false) => {\r\n        initial ? setNewComicsLoading(false) : setNewComicsLoading(true);\r\n        getComicsList(offset).then(handleComicsLoaded);\r\n    };\r\n\r\n    const handleComicsLoaded = (newComics) => {\r\n        newComics.length < 8 ? setComicsEnded(true) : setComicsEnded(false);\r\n\r\n        setComicsList([...comicsList, ...newComics]);\r\n        setOffset((prevOffset) => prevOffset + 8);\r\n        setNewComicsLoading(false);\r\n    };\r\n\r\n    const renderComicsList = (comics) => {\r\n        const itemsList = comics.map((item) => {\r\n            return (\r\n                <li className='comics__item' key={item.id}>\r\n                    <Link to={`/comics/${item.id}`}>\r\n                        <img\r\n                            src={item.img}\r\n                            alt={item.title}\r\n                            className='comics__item-img'\r\n                            style={{\r\n                                objectFit: item.img.includes(\r\n                                    'image_not_available'\r\n                                )\r\n                                    ? 'contain'\r\n                                    : 'cover',\r\n                            }}\r\n                        />\r\n                        <div className='comics__item-name'>{item.title}</div>\r\n                        <div className='comics__item-price'>\r\n                            Price: {item.price}\r\n                        </div>\r\n                    </Link>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return <ul className='comics__grid'>{itemsList}</ul>;\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleRequestComics(offset, true);\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <div className='comics__list'>\r\n            {loading && !newComicsLoading ? (\r\n                <Spinner />\r\n            ) : !error ? (\r\n                renderComicsList(comicsList)\r\n            ) : (\r\n                <ErrorMessage />\r\n            )}\r\n            <button\r\n                className='button button__main button__long'\r\n                onClick={() => handleRequestComics(offset)}\r\n                disabled={newComicsLoading}\r\n                style={{ display: comicsEnded ? 'none' : 'block' }}>\r\n                <div className='inner'>load more</div>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ComicsList;\r\n","import AppBanner from '../components/appBanner/AppBanner';\r\nimport ComicsList from '../components/comicsList/ComicsList';\r\n\r\nfunction ComicsPage() {\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ComicsPage;\r\n","import { useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport useMarvelService from '../services/marvelService';\n\nimport AppBanner from '../components/appBanner/AppBanner';\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\nimport Spinner from '../components/spinner/Spinner';\n\nimport './singleComicPage.scss';\n\nfunction SingleComicPage() {\n    const [comic, setComic] = useState([]);\n    const { comicId } = useParams();\n    const { getComic, clearError, loading, error } = useMarvelService();\n\n    const handleComicRequest = (id) => {\n        getComic(id).then((comic) => setComic(comic));\n        clearError();\n    };\n\n    useEffect(() => {\n        handleComicRequest(comicId);\n        // eslint-disable-next-line\n    }, [comicId]);\n\n    return (\n        <>\n            <AppBanner />\n            {loading ? (\n                <Spinner />\n            ) : !error ? (\n                <View comic={comic} />\n            ) : (\n                <ErrorMessage />\n            )}\n        </>\n    );\n}\n\nconst View = ({ comic }) => {\n    return (\n        <div className='single-comic'>\n            <img\n                src={comic.img}\n                alt={comic.title}\n                className='single-comic__img'\n            />\n            <div className='single-comic__info'>\n                <h2 className='single-comic__name'>{comic.title}</h2>\n                <p className='single-comic__descr'>{comic.descr}</p>\n                <p className='single-comic__descr'>\n                    Number of pages: {comic.pageCount}\n                </p>\n                <p className='single-comic__descr'>\n                    Language: {comic.language}\n                </p>\n                <div className='single-comic__price'>Price: {comic.price}</div>\n            </div>\n            <Link to='/comics' className='single-comic__back'>\n                Back to all\n            </Link>\n        </div>\n    );\n};\n\nexport default SingleComicPage;\n","import { Link } from 'react-router-dom';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\n\r\nfunction Page404() {\r\n    return (\r\n        <>\r\n            <ErrorMessage />\r\n            <p\r\n                style={{\r\n                    fontSize: '24px',\r\n                    fontWeight: '700',\r\n                    textAlign: 'center',\r\n                }}>\r\n                Page doesn't exist\r\n            </p>\r\n            <Link\r\n                to='/'\r\n                style={{\r\n                    display: 'block',\r\n                    marginTop: '30px',\r\n                    fontSize: '24px',\r\n                    fontWeight: '700',\r\n                    textAlign: 'center',\r\n                    textDecoration: 'underline',\r\n                    color: '#9f0013',\r\n                    cursor: 'pointer',\r\n                }}>\r\n                Back to Main Page\r\n            </Link>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Page404;\r\n","import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\nimport AppHeader from '../appHeader/AppHeader';\nimport MainPage from '../../pages/MainPage';\nimport ComicsPage from '../../pages/ComicsPage';\nimport SingleComicPage from '../../pages/SingleComicPage';\nimport Page404 from '../../pages/Page404';\n\nfunction App() {\n    return (\n        <Router basename='/react-marvel'>\n            <div className='app'>\n                <AppHeader />\n                <main>\n                    <Routes>\n                        <Route path='/' element={<MainPage />} />\n                        <Route path='/comics' element={<ComicsPage />} />\n                        <Route\n                            path='/comics/:comicId'\n                            element={<SingleComicPage />}\n                        />\n                        <Route path='*' element={<Page404 />} />\n                    </Routes>\n                </main>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);\n"],"sourceRoot":""}