{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","alt","MarvelService","_apiBase","_apiKey","_baseOffset","getResources","url","a","fetch","res","ok","Error","status","json","_transformCharacter","char","id","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","getAllCharacters","offset","data","results","map","getCharacter","RandomChar","state","loading","error","marvelService","onCharLoading","setState","onCharLoaded","onError","updateCharacter","Math","floor","random","then","catch","this","spinner","errorMessage","content","onClick","mjolnir","Component","View","classesNames","CharList","chars","newItemLoading","charEnded","updateChars","onCharsLoaded","onErrorMessage","newChars","ended","length","renderCharList","list","fitStyle","tabindex","itemClass","props","charId","onCharSelected","charsList","disabled","Skeleton","CharInfo","updateChar","prevProps","skeleton","comicsList","item","i","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1052033.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\nimport './error.scss';\r\n\r\nconst ErrorMessage = () => {\r\n    return(\r\n        <img src={img} alt='error' className='errorImg'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=43b852b655d1649e827e3c167cb36de9';\r\n    _baseOffset = 210;\r\n\r\n    getResources = async(url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    //метод для трансформации данных из полученного объекта - вычленяем нужные данные в новый объект\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 220)}...` : 'You can learn more information on Homepage or Wiki',\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResources(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResources(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateCharacter();\n    }\n\n    //для отображения спиннера при загрузке\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    //загрузка персонажа\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    //ошибка загрузки\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    //обновление рандомного персонажа\n    updateCharacter = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n        const spinner = loading ? <Spinner/> : null;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {spinner}\n                {errorMessage}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\" onClick={this.updateCharacter}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    \n    let classesNames = 'randomchar__img';\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        classesNames = 'randomchar__img contain';\n    }\n\n    return(\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className={classesNames}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass CharList extends Component {\n    state = {\n        chars: [],\n        loading: true,\n        error: false,\n        newItemLoading: false, //дозагрузка новых персонажей\n        offset: 210, //заданный отступ на сервере для \"адекватных\" персонажей\n        charEnded: false, //признак окончания перечня персонажей\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChars(); //отступ по умолчению\n    }\n\n    updateChars = (offset) => {\n        this.onCharLoading(); //при первоначальном рендеринге не повлияет\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharsLoaded)\n            .catch(this.onErrorMessage);    \n    }\n\n    onErrorMessage = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    //метод для вкл disabled на кнопке дозагрузки\n    onCharLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    //функция загрузки персонажей\n    onCharsLoaded = (newChars) => {\n        //определение конца списка персонажей (загрузка по 9)\n        let ended = false;\n        if (newChars.length < 9) {\n            ended = true; //данное значение отражаем в state (стр.60)\n        }\n\n        this.setState(({chars, offset}) => ({\n            chars: [...chars, ...newChars], //загрузка текущих из state + новых персонажей\n            loading: false, //отключаем рендеринг спиннера\n            newItemLoading: false, //отключаем disabled для кнопки дозагрузки\n            offset: offset + 9, //увеличение отступа на новых персонажей\n            charEnded: ended //стр.48-52\n        }));\n    }\n\n    renderCharList = (chars) => {\n        //применение стиля для not available thumbnails\n        const list = chars.map(char => {\n            let fitStyle = null;\n            if (char.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                fitStyle = {'objectFit': 'contain'};\n            }\n\n            //применение класса активности на выделенном элементе + возможность выбора через tab\n            let itemClass = 'char__item';\n            let tabindex;\n            if (char.id === this.props.charId) {\n                itemClass += ' char__item_selected';\n                tabindex = 0;\n            }\n\n            return (\n                <li className={itemClass} \n                    key={char.id}\n                    tabindex={tabindex}   \n                    onClick={() => this.props.onCharSelected(char.id)}>\n                        <img src={char.thumbnail} alt=\"abyss\" style={fitStyle}/>\n                        <div className=\"char__name\">{char.name}</div>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"char__grid\">\n                {list}\n            </ul>\n        )\n    }\n\n    render() {\n        const {chars, loading, error, newItemLoading, offset, charEnded} = this.state;\n        const charsList = this.renderCharList(chars);\n\n        const spinner = loading ? <Spinner/> : null;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const content = !(loading || error) ? charsList : null;\n\n        return (\n            <div className=\"char__list\">\n                {spinner}\n                {errorMessage}\n                {content}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    onClick={() => this.updateChars(offset)}\n                    style={{'display': charEnded ? 'none' : 'block'}}>\n                        <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }    \n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired //проверка на функ-ю и обязательность\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading(); //для отображения спиннера\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onErrorMessage);\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onErrorMessage = (error) => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n\n        const skeleton = (!loading && !error && !char) ? <Skeleton/> : null;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !loading && !error && char ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}                \n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, thumbnail, description, wiki, homepage, comics} = char;\n\n        //добавление стиля для 'image not available'\n        let fitStyle = null;\n        if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n            fitStyle = {'objectFit': 'contain'}\n        }\n        \n        //рендеринг списка комиксов\n        const comicsList = comics.map((item, i) => {\n            return (\n                <li className=\"char__comics-item\" key={i}>\n                    {item.name}\n                </li>\n            )\n        }).slice(0, 10);\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={fitStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no info about comics'}\n                {comicsList}\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number //проверка на числовой тип пропса charId\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList \n                                onCharSelected={this.onCharSelected} \n                                charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}